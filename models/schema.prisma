datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider             = "prisma-client-py"
    partial_type_generator = "models/partial_types.py"
    recursive_type_depth = -1
}

// User model
model User {
    id            String   @id @default(uuid())
    username      String
    email         String   @unique
    emailVerified Boolean  @default(false)
    password      String
    profile       Profile?
    follower      Follow[] @relation("follower")
    following     Follow[] @relation("following")
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
}

// Profile model
model Profile {
    id           String  @id @default(uuid())
    bio          String?
    profileImage String?
    coverImage   String?
    user         User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId       String  @unique
}

// Follow model
model Follow {
    id          String @id @default(uuid())
    follower    User   @relation("follower", fields: [followerId], references: [id], onDelete: Cascade)
    followerId  String @unique
    following   User   @relation("following", fields: [followingId], references: [id], onDelete: Cascade)
    followingId String @unique
}